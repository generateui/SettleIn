//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SettleIn.GameServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServer.IChat", CallbackContract=typeof(SettleIn.GameServer.IChatCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Join", ReplyAction="http://tempuri.org/IChat/JoinResponse")]
        SettleInCommon.Actions.Result.JoinResult Join(SettleInCommon.User.XmlUserCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Join", ReplyAction="http://tempuri.org/IChat/JoinResponse")]
        System.IAsyncResult BeginJoin(SettleInCommon.User.XmlUserCredentials credentials, System.AsyncCallback callback, object asyncState);
        
        SettleInCommon.Actions.Result.JoinResult EndJoin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IChat/Leave")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IChat/Leave")]
        System.IAsyncResult BeginLeave(System.AsyncCallback callback, object asyncState);
        
        void EndLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IChat/Say")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.InGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.LooseCardsAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PickGoldAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.AcceptOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.GameChatAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerLostConnection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerReconnectedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerLeftAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorLeftAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorLostConnection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TurnAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradeOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.CounterTradeOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlacePortAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.SwapChitAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradeBankAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.MoveShipAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildCityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlaceRobberPirateAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildTownAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.ClaimVictoryAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildRoadAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildShipAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuyDevcardAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RobPlayerAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradePlayerAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlayDevcardAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.EndTurnAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RollDiceAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RollVolcanoDiceAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.UserDisconnectedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.NewGameChangedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.GameJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyChatAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.GameCreatedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.EnterLobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.TryCreateGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.JoinGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.UserLeftLobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.MessageFromServerAction))]
        void Say(SettleInCommon.Actions.GameAction action);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IChat/Say")]
        System.IAsyncResult BeginSay(SettleInCommon.Actions.GameAction action, System.AsyncCallback callback, object asyncState);
        
        void EndSay(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Receive")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.InGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.LooseCardsAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PickGoldAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.AcceptOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.GameChatAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerLostConnection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerReconnectedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.PlayerLeftAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorLeftAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorLostConnection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.SpectatorJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TurnAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradeOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.InGame.CounterTradeOfferAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlacePortAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.SwapChitAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradeBankAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.MoveShipAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildCityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlaceRobberPirateAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildTownAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.ClaimVictoryAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildRoadAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuildShipAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.BuyDevcardAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RobPlayerAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.TradePlayerAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.PlayDevcardAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.EndTurnAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RollDiceAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.TurnActions.RollVolcanoDiceAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.UserDisconnectedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.NewGameChangedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.GameJoinedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.LobbyChatAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.GameCreatedAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.EnterLobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.TryCreateGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.JoinGameAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.Lobby.UserLeftLobbyAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SettleInCommon.Actions.MessageFromServerAction))]
        void Receive(SettleInCommon.Actions.GameAction action);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Receive")]
        System.IAsyncResult BeginReceive(SettleInCommon.Actions.GameAction action, System.AsyncCallback callback, object asyncState);
        
        void EndReceive(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : SettleIn.GameServer.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JoinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public JoinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SettleInCommon.Actions.Result.JoinResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SettleInCommon.Actions.Result.JoinResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<SettleIn.GameServer.IChat>, SettleIn.GameServer.IChat {
        
        private BeginOperationDelegate onBeginJoinDelegate;
        
        private EndOperationDelegate onEndJoinDelegate;
        
        private System.Threading.SendOrPostCallback onJoinCompletedDelegate;
        
        private BeginOperationDelegate onBeginLeaveDelegate;
        
        private EndOperationDelegate onEndLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginSayDelegate;
        
        private EndOperationDelegate onEndSayDelegate;
        
        private System.Threading.SendOrPostCallback onSayCompletedDelegate;
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<JoinCompletedEventArgs> JoinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LeaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SayCompleted;
        
        public SettleInCommon.Actions.Result.JoinResult Join(SettleInCommon.User.XmlUserCredentials credentials) {
            return base.Channel.Join(credentials);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginJoin(SettleInCommon.User.XmlUserCredentials credentials, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJoin(credentials, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public SettleInCommon.Actions.Result.JoinResult EndJoin(System.IAsyncResult result) {
            return base.Channel.EndJoin(result);
        }
        
        private System.IAsyncResult OnBeginJoin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SettleInCommon.User.XmlUserCredentials credentials = ((SettleInCommon.User.XmlUserCredentials)(inValues[0]));
            return this.BeginJoin(credentials, callback, asyncState);
        }
        
        private object[] OnEndJoin(System.IAsyncResult result) {
            SettleInCommon.Actions.Result.JoinResult retVal = this.EndJoin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnJoinCompleted(object state) {
            if ((this.JoinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JoinCompleted(this, new JoinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JoinAsync(SettleInCommon.User.XmlUserCredentials credentials) {
            this.JoinAsync(credentials, null);
        }
        
        public void JoinAsync(SettleInCommon.User.XmlUserCredentials credentials, object userState) {
            if ((this.onBeginJoinDelegate == null)) {
                this.onBeginJoinDelegate = new BeginOperationDelegate(this.OnBeginJoin);
            }
            if ((this.onEndJoinDelegate == null)) {
                this.onEndJoinDelegate = new EndOperationDelegate(this.OnEndJoin);
            }
            if ((this.onJoinCompletedDelegate == null)) {
                this.onJoinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJoinCompleted);
            }
            base.InvokeAsync(this.onBeginJoinDelegate, new object[] {
                        credentials}, this.onEndJoinDelegate, this.onJoinCompletedDelegate, userState);
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLeave(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLeave(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLeave(System.IAsyncResult result) {
            base.Channel.EndLeave(result);
        }
        
        private System.IAsyncResult OnBeginLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLeave(callback, asyncState);
        }
        
        private object[] OnEndLeave(System.IAsyncResult result) {
            this.EndLeave(result);
            return null;
        }
        
        private void OnLeaveCompleted(object state) {
            if ((this.LeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LeaveAsync() {
            this.LeaveAsync(null);
        }
        
        public void LeaveAsync(object userState) {
            if ((this.onBeginLeaveDelegate == null)) {
                this.onBeginLeaveDelegate = new BeginOperationDelegate(this.OnBeginLeave);
            }
            if ((this.onEndLeaveDelegate == null)) {
                this.onEndLeaveDelegate = new EndOperationDelegate(this.OnEndLeave);
            }
            if ((this.onLeaveCompletedDelegate == null)) {
                this.onLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginLeaveDelegate, null, this.onEndLeaveDelegate, this.onLeaveCompletedDelegate, userState);
        }
        
        public void Say(SettleInCommon.Actions.GameAction action) {
            base.Channel.Say(action);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSay(SettleInCommon.Actions.GameAction action, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSay(action, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSay(System.IAsyncResult result) {
            base.Channel.EndSay(result);
        }
        
        private System.IAsyncResult OnBeginSay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SettleInCommon.Actions.GameAction action = ((SettleInCommon.Actions.GameAction)(inValues[0]));
            return this.BeginSay(action, callback, asyncState);
        }
        
        private object[] OnEndSay(System.IAsyncResult result) {
            this.EndSay(result);
            return null;
        }
        
        private void OnSayCompleted(object state) {
            if ((this.SayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SayAsync(SettleInCommon.Actions.GameAction action) {
            this.SayAsync(action, null);
        }
        
        public void SayAsync(SettleInCommon.Actions.GameAction action, object userState) {
            if ((this.onBeginSayDelegate == null)) {
                this.onBeginSayDelegate = new BeginOperationDelegate(this.OnBeginSay);
            }
            if ((this.onEndSayDelegate == null)) {
                this.onEndSayDelegate = new EndOperationDelegate(this.OnEndSay);
            }
            if ((this.onSayCompletedDelegate == null)) {
                this.onSayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSayCompleted);
            }
            base.InvokeAsync(this.onBeginSayDelegate, new object[] {
                        action}, this.onEndSayDelegate, this.onSayCompletedDelegate, userState);
        }
    }
}
